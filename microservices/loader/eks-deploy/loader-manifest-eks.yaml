---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loader
  namespace: ragnarok
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loader
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loader
    spec:
#      nodeSelector:
#        agentpool: np001
      serviceAccountName: loader-internal-kubectl
      containers:
      - name: loader
        image: archbungle/loader:pulsar-0.0.77
        imagePullPolicy: IfNotPresent
        env:
        - name: LOAD_ENGINE_MODE          # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation    # The ConfigMap this value comes from.
              key: load_engine_mode     # The key to fetch.
        - name: FIX_ORDERS_RATE         # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation    # The ConfigMap this value comes from.
              key: fix_orders_rate      # The key to fetch.
        - name: SERIAL_HISTORICAL_TESTS        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: serial_historical_tests   # The key to fetch.
        - name:  CONCURRENT_HISTORICAL_TESTS        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: concurrent_historical_tests   # The key to fetch.
        - name:  CONCURRENT_SYNTHETIC_TESTS        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: concurrent_synthetic_tests   # The key to fetch.
        - name: FIX_ORDERS_NEW_PERCENTAGE        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: fix_orders_new_percentage  # The key to fetch.
        - name:  FIX_ORDERS_CANCEL        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: fix_orders_cancel  # The key to fetch.
        - name: FIX_ORDERS_MATCHING_PERCENTAGE        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: fix_orders_matching_percentage  # The key to fetch.
        - name: FIX_CLIENT_REPLICAS        # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: fix_client_replicas  # The key to fetch.
        - name: HISTORICAL_ORDERS_SEQUENCE_START_TIME       # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: historical_orders_sequence_start_time  # The key to fetch.
        - name: HISTORICAL_ORDERS_SEQUENCE_END_TIME       # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: historical_orders_sequence_end_time  # The key to fetch.
        - name: SYNTHETIC_SEQUENCE_START       # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: synthetic_sequence_start  # The key to fetch.
        - name: SYNTHETIC_SEQUENCE_END       # Notice that the case is different here from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
              name: batch-automation         # The ConfigMap this value comes from.
              key: synthetic_sequence_end    # The key to fetch.
        - name: BATCH_CONFIG_PATH
          value: "/appconfig/batch-automation.conf"
        - name: NAMESPACE
          value: "ragnarok"
        - name: FIX_PERFORMANCE_TEST_SERVICE
          value: "fxconsumer"
        - name: INGESTOR_SERVICE_ADDRESS
          value: "http://ingestor-service.ragnarok.svc.cluster.local"
        - name: ORDER_DUMPER_SERVICE_ADDRESS
          value: "http://dumper-service.ragnarok.svc.cluster.local"
        - name: REPLAY_SERVICE_ADDRESS
          value: "http://streamer-service.ragnarok.svc.cluster.local"
        - name: NUM_JOBS
          value: "20"
        - name: NUM_WORKERS
          value: "20"
        - name: DEFAULT_REPLICA_MAX
          value: "10"
        - name: PULSAR_BROKER_SERVICE_ADDRESS
          value: "pulsar://pulsar-broker.pulsar.svc.cluster.local:6650"
        - name: PULSAR_CONSUMER_SUBSCRIPTION_NAME
          value: "sub002"
        - name: MESSAGE_TOPIC
          value: "ragnarok/transactions/requests"
        - name: KAFKA_BROKER_SERVICE_ADDRESS
          value: "kafka-cp-kafka.kafka.svc.cluster.local:9092"
        - name: KAFKA_BROKER1_ADDRESS
          value: "kafka-0.kafka-headless.kafka.svc.cluster.local:9092"
        - name: KAFKA_BROKER2_ADDRESS
          value: "kafka-1.kafka-headless.kafka.svc.cluster.local:9092"
        - name: KAFKA_BROKER3_ADDRESS
          value: "kafka-2.kafka-headless.kafka.svc.cluster.local:9092"
        - name: ORDER_DUMP_TIME_INTERVAL
          value: "24"
        - name: SERIAL_LOAD_TEST_SERVICE
          value: "serialin"
        - name: REDIS_ALLOCATOR_NS_INDEX
          value: "11"
        - name: REDIS_MASTER_ADDRESS
          value: "ragnarok-redis-master.redis.svc.cluster.local:6379"
        - name: REDIS_REPLICA_ADDRESS
          value: "ragnarok-redis-replicas.redis.svc.cluster.local:6379"
        - name: REDIS_PASS
          value: "Yj7Oe21iHz"
        - name: SEQUENCE_REPLAY_DB
          value: "6"
        - name: CONSUMER_GROUP
          value: "cg001"
        - name: KCAT_PATH
          value: "/usr/bin/kcat"
        - name: DATA_STAGING_DIRECTORY
          value: "/staging"
        - name: DATA_SOURCE_DIRECTORY
          value: "/datastore"
        - name: DATA_OUT_DIRECTORY
          value: "/processed"
        - name: BACKUP_DIRECTORY
          value: "/backups"
        - name: LOCAL_LOGFILE_PATH
          value: "/applogs"
        - name: DEADLETTER_TOPIC
          value: "deadLetter"
        - name: METRICS_TOPIC
          value: "metrics"      
        - name: METRICS_PORT_NUMBER
          value: "80"
        - name: START_MESSAGE_SEQUENCE_ID
          value: "1000"
        - name: STOP_MESSAGE_SEQUENCE_ID
          value: "1100"
        - name: GRAFANA_DASHBOARD_URL
          value: "http://k8s-ragnarok-ragnarok-0eac0ccabd-1257342977.ap-southeast-1.elb.amazonaws.com/"
        - name: ADMIN_PASSWORD
          value: "somethingrandom"
#        volumeMounts:
#          - name: backups
#            mountPath: /backups
        ports:
          - name: tcp-80
            containerPort: 80
#      volumes:
#        - name: backups
#          persistentVolumeClaim:
#            claimName: backups-claim
      imagePullSecrets:
        - name: ragnarok

---
apiVersion: v1
kind: Service
metadata:
  name: loader-service
  namespace: ragnarok
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: loader
  ports:
    - name: tcp-80
      port: 80
      targetPort: 80
      protocol: TCP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: loader-modify-pods-to-sa
  namespace: ragnarok
subjects:
  - kind: ServiceAccount
    name: loader-internal-kubectl
roleRef:
  kind: Role
  name: loader-modify-pods
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: loader-modify-pods
  namespace: ragnarok
rules:
  - apiGroups: ["apps","extensions"]
    resources:
      - deployments
      - deployments/scale
      - deployments/*
      - statefulsets
    verbs:
      - get
      - update
      - watch
      - list
      - patch
      - delete
      - restart
      - scale
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loader-internal-kubectl
  namespace: ragnarok
